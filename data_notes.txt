CNN-LSTM Neura l Netowrk Model for Quantatative Strategy Analysis in Stock Markets

- tome span of training from 2007 beginning to 2013 end
testint from 2014 to 2017
CNN-LSTM paper
- all shares travered in stock market
top one percent of stocks are selected
- next 5 days of rate of return are predicted



--------------------------------------
We will probably engineer some features for detecting momentum and mean reversion, train them each on individual stocks, then choose to buy the top 10 stocks that have the largest growth potential
-------------------------------------
Using the latest advancements in deep learning to predict stock price movements

- lets try adding autoregressive model output as a feature to see if it is material for a single stock


XGBoost can be used for feature importance
- make sure data does not check for heteroskedasticity, multicollinearity, or serial correlation

BERT dypically used (pretrained) to classify news as positive or negative
Fourier ttransforms for trend analysis

Feature importanace can be made out with XGBoostf replacing

For the transformer consider Facebook's Prophet, Amazon's SageMaker, NBeats
For normal 



Potential methods for training data:
	1. train a single model on every stock. Use it to generate out of sample forecasts
	2. train a single model per stock, model that has the highest prediction has the associated stock used for purchasing
	3. 



Potential consequences of current method?
1. It completely ignores long term dependencies. Cycles can last years
2. It may seem like you're only using the 'short term' ability of the model to predict the stock, but different stocks behave differently, even if you extend that time frame
3. Although we are copying and pasting weights, we really are just randomly choosing random lines to train from, no context. The model will be useless


Manufacturer: ASUSTeK COMPUTER INC.
TUF gaming x570-plus (wi-fi)
